version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ./flood_detection_app/web/backend
      dockerfile: Dockerfile
    container_name: flood-detection-backend
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models:ro  # 只读挂载模型文件
      - backend_logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - MODELS_DIR=/app/models
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./flood_detection_app/web/frontend
      dockerfile: Dockerfile
    container_name: flood-detection-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理 (可选，用于生产环境)
  nginx:
    image: nginx:alpine
    container_name: flood-detection-proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    name: flood-detection-network